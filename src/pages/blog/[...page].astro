---
import type { GetStaticPaths, Page } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { Image } from 'astro:assets'
import { getCollection } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'

export const getStaticPaths = (async ({ paginate }) => {
  const allPosts = await getCollection('posts', (entry: CollectionEntry<'posts'>) => !entry.data.isDraft)
  return paginate(
    allPosts.sort(
      (a: CollectionEntry<'posts'>, b: CollectionEntry<'posts'>) =>
        b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
    ),
    { pageSize: 4 },
  )
}) satisfies GetStaticPaths

const { page } = Astro.props as { page: Page<CollectionEntry<'posts'>> }
const allPostsForDropdown = await getCollection('posts', (entry: CollectionEntry<'posts'>) => !entry.data.isDraft)
const categories = [...new Set(allPostsForDropdown.map(p => p.data.category))]
---

<BaseLayout title="The Latest" description="Insights, stories, and updates from Movara">
  <section class="bg-white py-24 lg:py-32">
    <div class="container-wide mx-auto">
      <div class="flex items-center justify-between mb-8">
        <h3 class="text-4xl md:text-5xl font-display text-primary">The Latest</h3>

        <div>
          <label for="category-select" class="sr-only">Filter by category</label>
          <select
            id="category-select"
            class="px-4 py-2 rounded-full border border-slate-300 text-slate-700 bg-white"
            onchange="window.location.href = this.value"
          >
            <option value="/blog" selected>Show All Categories</option>
            {categories.map(c => (
              <option value={`/blog/category/${c}`}>{c}</option>
            ))}
          </select>
        </div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 md:gap-10">
        {page.data.map((post: CollectionEntry<'posts'>) => (
          <article class="group">
            <a href={`/blog/${post.slug}`} class="block">
              <Image src={post.data.thumbnail} alt={post.data.title} class="w-full aspect-[16/9] object-cover rounded-2xl" />
            </a>
            <div class="mt-3">
              <div class="mb-2">
                <span class="inline-block rounded-full bg-accent text-slate-700 px-3 py-1">{post.data.category}</span>
              </div>
              <h4 class="">
                <a href={`/blog/${post.slug}`} class="hover:underline">{post.data.title}</a>
              </h4>
            </div>
          </article>
        ))}
      </div>

      <nav class="mt-10 flex items-center justify-between">
        {page.url.prev && (
          <a href={page.url.prev} class="inline-flex items-center gap-2 px-4 py-2 rounded-full border border-slate-300 text-slate-700 hover:bg-slate-50 transition">← Newer</a>
        )}
        <div class="flex-1" />
        {page.url.next && (
          <a href={page.url.next} class="inline-flex items-center gap-2 px-4 py-2 rounded-full border border-slate-300 text-slate-700 hover:bg-slate-50 transition">Older →</a>
        )}
      </nav>
    </div>
  </section>
</BaseLayout>
